{"version":3,"sources":["nodeanim.js"],"names":["mouseMove","e","posx","posy","pageX","pageY","clientX","clientY","document","body","scrollLeft","documentElement","scrollTop","target","x","y","scrollCheck","animateHeader","height","resize","width","window","innerWidth","innerHeight","largeHeader","style","canvas","animate","ctx","clearRect","i","points","Math","abs","getDistance","active","circle","drawLines","draw","requestAnimationFrame","shiftPoint","p","TweenLite","to","random","originX","originY","ease","Circ","easeInOut","onComplete","closest","beginPath","moveTo","lineTo","strokeStyle","stroke","Circle","pos","rad","color","_this","this","radius","arc","PI","fillStyle","fill","p1","p2","pow","querySelector","getElementById","contains","offsetWidth","offsetHeight","getContext","px","py","push","length","j","placed","k","undefined","c","addEventListener"],"mappings":"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","file":"scripts.min.js","sourcesContent":["(function() {\n\n    var width, height, ctx, points, target, animateHeader = true;\n    const largeHeader = document.querySelector('#homepage #hero');\n    const canvas = document.getElementById('homepage-canvas');\n\n    // Main\n    if (document.body.contains(largeHeader) && document.body.contains(canvas)) {\n        initHeader();\n        initAnimation();\n        addListeners();\n    }\n\n    function initHeader() {\n        width = largeHeader.offsetWidth;\n        height = largeHeader.offsetHeight;\n        target = {x: width/2, y: height/2};\n\n        largeHeader.style.height = height+'px';\n\n        canvas.width = width;\n        canvas.height = height;\n        ctx = canvas.getContext('2d');\n\n        // create points\n        points = [];\n        for(var x = 0; x < width; x = x + width/20) {\n            for(var y = 0; y < height; y = y + height/20) {\n                var px = x + Math.random()*width/20;\n                var py = y + Math.random()*height/20;\n                var p = {x: px, originX: px, y: py, originY: py };\n                points.push(p);\n            }\n        }\n\n        // for each point find the 5 closest points\n        for(var i = 0; i < points.length; i++) {\n            var closest = [];\n            var p1 = points[i];\n            for(var j = 0; j < points.length; j++) {\n                var p2 = points[j]\n                if(!(p1 == p2)) {\n                    var placed = false;\n                    for(var k = 0; k < 5; k++) {\n                        if(!placed) {\n                            if(closest[k] == undefined) {\n                                closest[k] = p2;\n                                placed = true;\n                            }\n                        }\n                    }\n\n                    for(var k = 0; k < 5; k++) {\n                        if(!placed) {\n                            if(getDistance(p1, p2) < getDistance(p1, closest[k])) {\n                                closest[k] = p2;\n                                placed = true;\n                            }\n                        }\n                    }\n                }\n            }\n            p1.closest = closest;\n        }\n\n        // assign a circle to each point\n        for(var i in points) {\n            var c = new Circle(points[i], 2+Math.random()*2, 'rgba(255,255,255,0.3)');\n            points[i].circle = c;\n        }\n    }\n\n    // Event handling\n    function addListeners() {\n        if(!('ontouchstart' in window)) {\n            window.addEventListener('mousemove', mouseMove);\n        }\n        window.addEventListener('scroll', scrollCheck);\n        window.addEventListener('resize', resize);\n    }\n\n    function mouseMove(e) {\n        var posx = 0;\n        var posy = 0;\n        if (e.pageX || e.pageY) {\n            posx = e.pageX;\n            posy = e.pageY;\n        }\n        else if (e.clientX || e.clientY)    {\n            posx = e.clientX + document.body.scrollLeft + document.documentElement.scrollLeft;\n            posy = e.clientY + document.body.scrollTop + document.documentElement.scrollTop;\n        }\n        target.x = posx;\n        target.y = posy;\n    }\n\n    function scrollCheck() {\n        if(document.body.scrollTop > height) animateHeader = false;\n        else animateHeader = true;\n    }\n\n    function resize() {\n        width = window.innerWidth;\n        height = window.innerHeight;\n        largeHeader.style.height = height+'px';\n        canvas.width = width;\n        canvas.height = height;\n    }\n\n    // animation\n    function initAnimation() {\n        animate();\n        for(var i in points) {\n            shiftPoint(points[i]);\n        }\n    }\n\n    function animate() {\n        if(animateHeader) {\n            ctx.clearRect(0,0,width,height);\n            for(var i in points) {\n                // detect points in range\n                if(Math.abs(getDistance(target, points[i])) < 4000) {\n                    points[i].active = 0.3;\n                    points[i].circle.active = 0.6;\n                } else if(Math.abs(getDistance(target, points[i])) < 20000) {\n                    points[i].active = 0.1;\n                    points[i].circle.active = 0.3;\n                } else if(Math.abs(getDistance(target, points[i])) < 40000) {\n                    points[i].active = 0.02;\n                    points[i].circle.active = 0.1;\n                } else {\n                    points[i].active = 0;\n                    points[i].circle.active = 0;\n                }\n\n                drawLines(points[i]);\n                points[i].circle.draw();\n            }\n        }\n        requestAnimationFrame(animate);\n    }\n\n    function shiftPoint(p) {\n        TweenLite.to(p, 1+1*Math.random(), {x:p.originX-50+Math.random()*100,\n            y: p.originY-50+Math.random()*100, ease:Circ.easeInOut,\n            onComplete: function() {\n                shiftPoint(p);\n            }});\n    }\n\n    // Canvas manipulation\n    function drawLines(p) {\n        if(!p.active) return;\n        for(var i in p.closest) {\n            ctx.beginPath();\n            ctx.moveTo(p.x, p.y);\n            ctx.lineTo(p.closest[i].x, p.closest[i].y);\n            ctx.strokeStyle = 'rgba(156,217,249,'+ p.active+')';\n            ctx.stroke();\n        }\n    }\n\n    function Circle(pos,rad,color) {\n        var _this = this;\n\n        // constructor\n        (function() {\n            _this.pos = pos || null;\n            _this.radius = rad || null;\n            _this.color = color || null;\n        })();\n\n        this.draw = function() {\n            if(!_this.active) return;\n            ctx.beginPath();\n            ctx.arc(_this.pos.x, _this.pos.y, _this.radius, 0, 2 * Math.PI, false);\n            ctx.fillStyle = 'rgba(156,217,249,'+ _this.active+')';\n            ctx.fill();\n        };\n    }\n\n    // Util\n    function getDistance(p1, p2) {\n        return Math.pow(p1.x - p2.x, 2) + Math.pow(p1.y - p2.y, 2);\n    }\n\n})();"]}